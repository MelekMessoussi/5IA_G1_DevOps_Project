pipeline {
    agent any 
    environment {
        NEXUS_URL = 'http://localhost:8081/repository/maven-releases/'
        NEXUS_ARTIFACT_PATH = 'tn/esprit/DevOps_Project/1.0/DevOps_Project-1.0.jar'
        DOCKER_HUB_USER = 'yassatrous'
        DOCKER_HUB_PASSWORD = credentials('docker_hub_password') 
        NEXUS_CREDENTIALS = credentials('nexus_credentials') 
    }

    stages {
        stage('Checkout GIT') {
            steps {
                echo "Pulling..."
                git branch: 'yasmineatrous_5IA_G1', url: 'https://github.com/MelekMessoussi/5IA_G1_DevOps_Project.git'
            }
        }

        stage('Maven Clean and Compile') {
            steps {
                echo "Nettoyage et compilation du projet..."
                sh 'mvn clean compile'
            }
        }
        
        stage('MVN SONARQUBE') {
            steps {
                withSonarQubeEnv('sq1') { 
                    sh 'mvn sonar:sonar'
                }
            }
        }
        
        stage('JUnit') {
            steps {
                echo "Running JUnit tests..."
                sh 'mvn test'
            }
        }
        
        stage('Deploy to Nexus') {
            steps {
                echo "DÃ©ploiement vers Nexus..."
                sh 'mvn deploy -DaltDeploymentRepository=deploymentRepo::default::${NEXUS_URL}'
            }
        }

        stage('Download Artifact from Nexus') {
            steps {
                echo "Downloading latest artifact from Nexus..."
                // Update this with actual artifact details or use a variable for artifact version
                sh 'curl -u ${NEXUS_CREDENTIALS_USR}:${NEXUS_CREDENTIALS_PSW} -o target/DevOps_Project-1.0.jar ${NEXUS_URL}${NEXUS_ARTIFACT_PATH}'
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    echo "Building Docker image with latest Nexus artifact..."
                    sh 'docker build -t yassatrous/yasmineatrous_5ia_g1_devops_project:1.0.0 .'
                }
            }
        }

        stage('Docker Hub') {
            steps {
                script {
                    echo "Logging in to Docker Hub and pushing..."
                    sh "echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin"
                    sh "docker push yassatrous/yasmineatrous_5ia_g1_devops_project:1.0.0"
                }
            }
        }
        
        stage('Docker Compose Up') {
            steps {
                script {
                    sh 'docker compose up -d'
                }
            }
        }
        
        stage('Grafana') {
            steps {
                script {
                    
                    def jobResult = currentBuild.currentResult == 'SUCCESS' ? 1 : 0
                    def jobDuration = currentBuild.duration / 1000 

                    echo "Job Success Rate: ${jobResult}"
                    echo "Job Duration: ${jobDuration} seconds"
                    
                    echo "Job Success Rate: ${jobResult}"
                    echo "Job Duration: ${jobDuration} milliseconds"
                    
                    sh "curl -X POST -d 'job_duration=${jobDuration}' http://192.168.33.10:9090/metrics"

                    
                }
            }
        }

    }
}


